---
- name: Configure Device
  hosts: all
  gather_facts: false
  tasks:
    - name: Make users passwordless for sudo in group
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%{{ ansible_user }}'
        line: '%{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    # Update and install packages
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      become: true
      ansible.builtin.apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all packages on servers
      become: true
      ansible.builtin.apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      ansible.builtin.stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the box if kernel updated
      become: true
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Install packages
      become: true
      ansible.builtin.apt:
        clean: true
        name:
          - zsh
          - git
          - htop
          - curl
          # NTFS
          - fuse
          - ntfs-3g
          # Transmission
          - transmission-daemon

    # Install Oh My Zsh
    - name: Install Oh My Zsh
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: "/home/{{ ansible_user }}/.oh-my-zsh"
        depth: 1
        clone: true
        version: 7dcabbe6826073ef6069c8a4b6f9a943f00d2df0

    - name: Set default shell for users
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        shell: "/bin/zsh"

    - name: Copy zshrc
      ansible.builtin.copy:
        src: files/zshrc
        dest: "/home/{{ ansible_user }}/.zshrc"
        mode: "0644"

    # External hard drive
    - name: Mount up device by label (NTFS)
      become: true
      ansible.posix.mount:
        path: "{{ mount_dir }}"
        boot: true
        src: LABEL={{ usb_volume_label }}
        fstype: ntfs
        opts: defaults,auto,users,rw,nofail,umask=000
        state: mounted

    # Install transmission
    - name: Temporary stop transmission
      become: true
      ansible.builtin.service:
        state: stopped
        name: transmission-daemon

    - name: Add watch dir
      ansible.builtin.file:
        state: directory
        path: "{{ transmission_dir_torrents }}"
        mode: 'umask'

    - name: Add incomplete folder
      ansible.builtin.file:
        state: directory
        path: "{{ transmission_dir_incomplete }}"
        mode: 'umask'

    - name: Add downloads folder
      ansible.builtin.file:
        state: directory
        path: "{{ transmission_dir_download }}"
        mode: 'umask'

    - name: Copy transmission configuration
      become: true
      ansible.builtin.template:
        src: transmission-settings.json.j2
        dest: "/etc/transmission-daemon/settings.json"
        mode: '0644'

    - name: Start transmission
      become: true
      ansible.builtin.service:
        state: started
        name: transmission-daemon
