import email
import smtplib
import ssl
import glob

from pathlib import Path
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

sender_email = input("Email: ")
password = input("Password: ")


def create_email_test(receiver_email: str, filename: str) -> str:
    subject = "üöß VPN: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ (–∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞ —Ö2)"
    body = """–ü—Ä–∏–≤–µ—Ç,
–Ø –ø–µ—Ä–µ–Ω–µ—Å VPN —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–Ω–∏–º–∞–ª, –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Å–¥–µ–ª–∞–ª —Ä–∞—Å—Å—ã–ª–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
–ö Email –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å OpenVPN, –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –∏ –≤—Å–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å. –ï—Å–ª–∏ —á—Ç–æ –ø–∏—à–∏—Ç–µ üôÇ

–ú–æ–∂–Ω–æ –Ω–µ –±–æ—è—Ç—å—Å—è –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, —É –Ω–µ–≥–æ –Ω–µ—Ç –ª–∏–º–∏—Ç–∞ –ø–æ —Ç—Ä–∞—Ñ–∏–∫—É.
–ù–æ —Ç–æ—Ä—Ä–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –Ω–µ–≥–æ —Ç–æ–∂–µ –Ω–µ —Å—Ç–æ–∏—Ç –∫–∞—á–∞—Ç—å –≤—Å—é –Ω–æ—á—å, CPU —à–∞—Ä–∏—Ç—Å—è –º–µ–∂–¥—É –≤—Å–µ–º –∏ —Å–∫–æ—Ä–æ—Å—Ç—å —É –¥—Ä—É–≥–∏—Ö –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å.

P.S.
–ï—Å–ª–∏ —á–µ—Å—Ç–Ω–æ, —è –¥—É–º–∞–ª —á—Ç–æ –∏–º –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–ª–∞–∫–∞ –≥–æ–≤–æ—Ä–∏–ª–∞, —á—Ç–æ –Ω–∞–≥—Ä—É–∑–∫–∞ –æ–∫–æ–ª–æ –Ω—É–ª—è üòÖ
–°–µ–π—á–∞—Å –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –æ—Ç—Ä–∞–±–æ—Ç–∞–ª –∏ –¥–æ –≤—Å–µ—Ö –¥–æ–π–¥–µ—Ç, –∫—Ç–æ –∂–¥–∞–ª üòÑüëç
–ß–∞—Å—Ç–∏ –Ω–µ –¥–æ—à–ª–æ –ø—Ä–æ—Å—Ç–æ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑...

–£–¥–∞—á–∏,
–°–µ—Ä–≥–µ–π ü§ñ
"""

    # Create a multipart message and set headers
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = receiver_email
    message["Subject"] = subject

    # Add body to email
    message.attach(MIMEText(body, "plain"))

    # Open file in binary mode
    with open(filename, "rb") as attachment:
        # Add file as application/octet-stream
        # Email client can usually download this automatically as attachment
        part = MIMEBase("application", "octet-stream")
        part.set_payload(attachment.read())

    # Encode file in ASCII characters to send by email
    encoders.encode_base64(part)

    # Add header as key/value pair to attachment part
    part.add_header(
        "Content-Disposition",
        f"attachment; filename= {Path(filename).name}",
    )

    # Add attachment to message and convert message to string
    message.attach(part)
    return message.as_string()


receiver_list = []
for filename in glob.glob("./zipfiles/**.zip"):
    name = Path(filename).name
    print(name)
    username = name.removeprefix("v4scale_").removesuffix(".zip")
    user_email = f"{username}@v4scale.com"

    receiver_list.append({
        "email": user_email,
        "file": filename,
    })

print(f"[INFO] {len(receiver_list)=}")

for r in receiver_list:
    e = r["email"]
    f = r["file"]
    print(f"[INFO] sendmail to {e}, {f}")

    # Log in to server using secure context and send email
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL("mail.v4scale.com", 465, context=context) as server:
        print("[INFO] SMTP_SSL")
        server.login(sender_email, password)
        print("[INFO] login")

        text = create_email_test(e, f)
        server.sendmail(sender_email, e, text)

print("[INFO] done")
